// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         String              @id @default(cuid())
  title      String
  slug       String              @unique
  excerpt    String?             @db.VarChar(255)
  content    String              @db.Text
  author     User                @relation(fields: [authorId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  authorId   String
  categories CategoriesOnPosts[]
  published  DateTime?
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt

  @@map("posts")
}

model Category {
  id        String              @id @default(cuid())
  name      String              @unique
  slug      String              @unique
  posts     CategoriesOnPosts[]
  color     String
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@map("categories")
}

// Junction table for many-to-many relationship between Post and Category
model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  postId     String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  categoryId String
  assignedAt DateTime @default(now())

  @@id([postId, categoryId])
  @@map("categories_posts")
}
